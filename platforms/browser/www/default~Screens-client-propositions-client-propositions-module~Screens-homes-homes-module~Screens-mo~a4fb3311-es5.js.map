{"version":3,"sources":["./src/app/Models/Project.ts","./src/app/Services/projects.service.ts"],"names":[],"mappings":"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","file":"default~Screens-client-propositions-client-propositions-module~Screens-homes-homes-module~Screens-mo~a4fb3311-es5.js","sourcesContent":["\nexport class Project{\n id:string;   \n client:string;\n cost:number;\n description:string;\n manager:string;\n progress:number;\n name:string;\n type:string;\n\n}","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport {AngularFirestore }from '@angular/fire/firestore';\nimport {Project} from '../../app/Models/Project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  \n\n  constructor(private afs: AngularFirestore) { \n     \n  }\n  createProject(value){\n    return new Promise<any>((resolve, reject) => {\n      let currentUser = firebase.auth().currentUser;\n     \n      this.afs.collection('projects').add({\n        manager:currentUser.uid,\n        name: value.name,\n        description: value.description,\n        type:value.type,\n        client:value.client,\n        progress:0,\n        cost:value.cost\n      })\n      .then(\n        res => {\n        \n          resolve(res)\n        },\n        err => reject(err)\n      )\n    })\n   }\n\n   AsyncProjects(){    \n  \n   return  this.afs.collection('projects').snapshotChanges();\n   }\n   AsyncPropositions(){    \n    \n    return  this.afs.collection('propositions').snapshotChanges();\n    }\n\n  getProjects() {\n    return new Promise<any>((resolve, reject) => {\n      let value = firebase.auth().currentUser;\n      let projects:any=[]; \n      let project=new Project();\n      \n      this.afs.collection('projects').get().forEach(doc=>{\n        \n        doc.docs.forEach(d=>{\n\n          var obj = JSON.parse(JSON.stringify(d.data()));\n          if(obj['manager']==value.uid){\n           \n            project=obj;\n            projects.push(project);\n            \n          }\n\n        })\n     \n    })\n     \n      .then(\n        res => {\n        \n          resolve(projects)\n        },\n        err => reject(err)\n      )\n    })\n    \n  }\n  createTask(value,id){\n    return new Promise<any>((resolve, reject) => {\n      this.afs.collection('projects').doc(id).collection(\"tasks\").add({\n        state:\"to do\",\n        name:value.Name,\n        description:value.Description,\n        person:value.Person,\n        hours:value.Hours\n      })\n      .then(\n        res => {\n        \n          resolve(res)\n        },\n        err => reject(err)\n      )\n    })\n\n  }\n  getTasks(id){\n\n    return this.afs.collection('projects').doc(id).collection('tasks').snapshotChanges();\n    \n   \n    \n\n  }\n  getClients(){\n    return new Promise<any>((resolve, reject) => {\n      let clients:any=[]; \n      \n      this.afs.collection('users').get().forEach(doc=>{\n        \n        doc.docs.forEach(d=>{\n\n          var obj = JSON.parse(JSON.stringify(d.data()));\n          if(obj['role']==\"client\"){\n         \n            clients.push(obj);\n            \n          }\n\n        })\n     \n    })\n     \n      .then(\n        res => {\n        \n          resolve(clients)\n        },\n        err => reject(err)\n      )\n    })\n\n  }\n  getDevs(){\n    return new Promise<any>((resolve, reject) => {\n      let devs:any=[]; \n      \n      this.afs.collection('users').get().forEach(doc=>{\n        \n        doc.docs.forEach(d=>{\n\n          var obj = JSON.parse(JSON.stringify(d.data()));\n          if(obj['role']==\"developer\"){\n           \n            devs.push(obj);\n            \n          }\n\n        })\n     \n    })\n     \n      .then(\n        res => {\n        \n          resolve(devs)\n        },\n        err => reject(err)\n      )\n    })\n\n  }\n  getClientProjects() {\n    return new Promise<any>((resolve, reject) => {\n      let value = firebase.auth().currentUser;\n      let projects:any=[]; \n      let project=new Project();\n      \n      this.afs.collection('projects').get().forEach(doc=>{\n        \n        doc.docs.forEach(d=>{\n\n          var obj = JSON.parse(JSON.stringify(d.data()));\n          if(obj['client']==value.uid){\n            project=obj;\n            project.id=d.id;\n           \n            projects.push(project);\n            \n          }\n\n        })\n     \n    })\n     \n      .then(\n        res => {\n        \n          resolve(projects)\n        },\n        err => reject(err)\n      )\n    })\n    \n  }\n  getManagers(){\n    return new Promise<any>((resolve, reject) => {\n      let managers:any=[]; \n      \n      this.afs.collection('users').get().forEach(doc=>{\n        \n        doc.docs.forEach(d=>{\n\n          var obj = JSON.parse(JSON.stringify(d.data()));\n          if(obj['role']==\"manager\"){\n            console.log(obj);\n            managers.push(obj);\n            \n          }\n\n        })\n     \n    })\n     \n      .then(\n        res => {\n        \n          resolve(managers)\n        },\n        err => reject(err)\n      )\n    })\n\n  }\n  async createProposition(value,filetoupload){\n    console.log(filetoupload)\n    let uid= firebase.auth().currentUser.uid;\n    const storageRef=firebase.storage().ref(`/pdf/uid/${filetoupload.name}.pdf`);\n    var uplaodtask=await storageRef.put(filetoupload.data, { contentType: `application/pdf` });\n    var urlFile= (await  uplaodtask.ref.getDownloadURL())\n    return new Promise<any>((resolve, reject) => {\n      let currentUser = firebase.auth().currentUser;\n      this.afs.collection('propositions').add({\n    \n        name: value.Name,\n        description: value.Description,\n        type:value.Type,\n        state:'not treated',\n        client:currentUser.uid,\n        file:urlFile\n       \n      })\n      .then(\n        res => {\n        \n          resolve(res)\n        },\n        err => reject(err)\n      )\n    })\n   }\n   getClient(id){\n    return new Promise<any>((resolve, reject) => {\n      let client:any;\n      \n      this.afs.collection('users').get().forEach(doc=>{\n        \n        doc.docs.forEach(d=>{\n\n          var obj = JSON.parse(JSON.stringify(d.data()));\n          if(obj['uid']==id){\n            \n           client=obj['username'];\n            \n          }\n\n        })\n     \n    })\n     \n      .then(\n        res => {\n          resolve(client)\n        },\n        err => reject(err)\n      )\n    })\n\n  }\n  deletePropostion(id){\n    return new Promise<any>((resolve,reject)=>{\n      this.afs.collection(\"propositions\").doc(id).delete().then((res)=>{\n        resolve(res);\n      });\n\n    })\n\n  }\n  deleteProject(id){\n    return new Promise<any>((resolve,reject)=>{\n      this.afs.collection(\"projects\").doc(id).delete().then((res)=>{\n        resolve(res);\n      });\n\n    })\n\n  }\n  declinePropositon(value){\n    let user = firebase.auth().currentUser;\n\n    return new Promise<any>((resolve,reject)=>{\n    this.afs.collection(\"refusedprops\").add({\n      manager:user.uid,\n      name: value.name,\n      description: value.description,\n      type:value.type,\n      client:value.client,\n     \n    }) .then(\n      res => {\n      \n        resolve(res)\n      },\n      err => reject(err)\n    )\n    })\n  }\n  getRejections() {\n   return  this.afs.collection(\"refusedprops\").snapshotChanges();\n    \n  }\n  getDoneTasks(id){\n    let tasks=[];\n    return new Promise<any>((resolve,reject)=>{\n      this.afs.collection(\"projects\").doc(id).collection(\"tasks\").get().forEach((res)=>{\n        res.docs.forEach(d=>{\n\n          var obj = JSON.parse(JSON.stringify(d.data()));\n          if(obj['state']==\"done\"){\n            tasks.push(obj)\n            \n          }\n\n        })\n     \n    })\n     \n      .then(\n        res => {\n        \n          resolve(tasks)\n        },\n        err => reject(err)\n      )\n    })\n  }\n updateProject(id,progress){\n  return new Promise<any>((resolve,reject)=>{\n    this.afs.collection(\"projects\").doc(id).update(\n      {\n        'progress':progress\n      }\n    )\n   \n    .then(\n      res => {\n      \n        resolve(res)\n      },\n      err => reject(err)\n    )\n  })\n\n }\n getProject(id){\n   let project=new Project();\n   let result:any;\n   return new Promise<any>((resolve,reject)=>{\n    this.afs.collection('projects').get().forEach(doc=>{\n        \n      doc.docs.forEach(d=>{\n  \n        if(d.id==id){\n          var obj = JSON.parse(JSON.stringify(d.data()));\n          project=obj;\n          project.id=d.id;\n          result=project;\n          \n        }\n        \n  \n      })\n   \n  })\n   \n    .then(\n      res => {\n      \n        resolve(result)\n      },\n      err => reject(err)\n    )\n  })\n\n   }\n   update(value,id){\n    return new Promise<any>((resolve,reject)=>{\n      this.afs.collection('projects').doc(id).update({\n        \"name\":value.name,\n        \"description\":value.description,\n        \"type\":value.type,\n        \"client\":value.client,\n        \"manager\":value.manager,\n        \"progress\":value.progress\n\n      })\n     \n      .then(\n        res => {\n        \n          resolve(res)\n        },\n        err => reject(err)\n      )\n    })\n   }\n  async updateProposition(value,file,id){\n    let uid= firebase.auth().currentUser.uid;\n    \n    var obj={\n      \"name\":value.name,\n      \"description\":value.description,\n      \"type\":value.type\n    }\n    if(file!=null){\n      const storageRef=firebase.storage().ref(`/pdf/uid/${file.name}.pdf`);\n      var uplaodtask=await storageRef.put(file.data, { contentType: `application/pdf` });\n      var urlFile= (await  uplaodtask.ref.getDownloadURL())\n      obj [\"file\"]=urlFile\n    }\n    \n    await this.afs.collection('propositions').doc(id).update(obj);\n    \n      \n     \n   }\n   uploadFile(file){\n     let storageRef= firebase.storage().ref();\n    return new Promise<any>((resolve, reject) => {\n      storageRef.put(file).then(function(snapshot) {\n        console.log('Uploaded a blob or file!');\n      });\n\n    })\n  }\n \n   getPropositionDetail(id){\n    \n  \n    return this.afs.collection('propositions').doc(id).snapshotChanges();\n\n   }\n  \n  \n}\n"],"sourceRoot":""}